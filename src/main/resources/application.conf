akka {
  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]
  actor {
    provider = cluster
    allow-java-serialization = off
    serializers {
      kyro = "com.romix.akka.serialization.kryo.KryoSerializer",
      jackson-cbor = "akka.serialization.jackson.JacksonCborSerializer",
      jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"

    }
    serialization-bindings {
      "model.MySerializable" = kyro
    }
    kryo {
      type = "graph" // can serialize objects with shared or cyclic dependencies; alternative nograph, faster
      idstrategy = "default"

      classes = [
        "model.MySerializable"
      ]
    }
  }
  remote {
    artery  {
      enabled = on
      transport = aeron-udp
      canonical.hostname = "localhost"
      advanced {
        outbound-message-queue-size = 1000000
      }
    }
  }
  cluster {
    seed-nodes = [
      "akka://akkaPolyFlowCluster@localhost:2551",
      "akka://akkaPolyFlowCluster@localhost:2552"
    ]
  }
}
input  {
  filepath = "src/main/resources/input/"
  type = "txt"
}
output {
  filepath = "src/main/resources/output"
}